create database if not exists Lib;
use Lib;

drop table if exists borrows_books;
drop table if exists borrows;
drop table if exists readers;
drop table if exists books;
drop table if exists authors;

create table if not exists readers(
readersid int auto_increment not null,
name varchar(50) not null,
phone varchar(50) not null,
address varchar(250) not null,
primary key(readersid));

create table if not exists authors(
authorsid int auto_increment not null,
name varchar(50) not null,
primary key(authorsid));

create table if not exists books(
booksid int auto_increment not null,
authorsid int not null,
name varchar(100) not null,
primary key(booksid),
foreign key (authorsid) references authors(authorsid));


create table if not exists borrows(
borrowsid int auto_increment not null,
readersid int not null,
borrowsdate datetime not null,
returndate datetime not null,
primary key(borrowsid),
foreign key (readersid) references readers(readersid));


create table if not exists borrows_books(
borrowsid int,
booksid int,
foreign key (borrowsid) references borrows(borrowsid),
foreign key (booksid) references books(booksid));

insert into readers(name,phone,address)
value ("Nguyen Van A","0921312132","Ha Noi"),
("Nguyen Van C","0921313432","Hai Duong"),
("Nguyen Van B","0921641362","Thai Binh"),
("Nguyen Van D","0921234132","Ha Noi"),
("Nguyen Van E","0921365432","Ha Noi"),
("Nguyen Van F","0922342132","Nam Dinh"),
("Nguyen Van G","0921376542","Ha Noi"),
("Nguyen Van H","0921312632","Hue"),
("Nguyen Van I","0963312132","Ha Noi");

insert into authors(name)
value ("William Shakespeare"),
("Agatha Christie"),
("Barbara Cartland"),
("Danielle Steel"),
("Sidney Sheldon"),
("J.K.Rowling"),
("Stephen King");

insert into books(authorsid,name)
value (1,"Sad Cypress"),(1,"By the Pricking of My Thumbs"),(1,"There is a Tide"),
(2,"Agatha Christie: An Autobiography"),(2,"A Daughter's a Daughter"),
(3,"Blood Money"),(3,"A Hazard of Hearts"),
(4,"The Promise"),(4,"Now and Forever"),
(5,"The Naked Face"),(5,"A Stranger in the Mirror"),
(6,"Harry Potter"),
(7,"The Shining"),(7,"The Dark Tower: The Gunslinger"),(7,"The Tommyknockers"),(7,"Needful Things");

insert into borrows(readersid,borrowsdate,returndate)
value (4,"2011-02-04","2011-02-16"),
(4,"2011-02-05","2011-03-16"),
(4,"2011-02-06","2011-03-16"),
(4,"2011-02-07","2011-03-16"),
(4,"2011-02-08","2011-03-16"),
(4,"2011-02-05","2011-03-16"),
(4,"2011-02-09","2011-03-16"),
(4,"2011-02-23","2011-03-16"),
(4,"2011-02-13","2011-03-16"),
(4,"2011-02-15","2011-03-16"),
(4,"2011-02-15","2011-03-16"),
(4,"2011-02-23","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(3,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(8,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(9,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(7,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(6,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(5,"2011-02-04","2011-03-16"),
(2,"2011-02-04","2011-03-16"),
(2,"2011-02-04","2011-03-16"),
(2,"2011-02-04","2011-03-16"),
(1,"2011-02-04","2011-03-16"),
(1,"2011-02-04","2011-03-16"),
(1,"2011-02-04","2011-03-16"),
(1,"2011-02-04","2011-03-16");

insert into borrows_books(borrowsid,booksid)
value (1,1),
(2,2),
(3,3),
(4,4),
(5,5),
(6,6),
(7,7),
(8,8),
(9,9),
(10,10),
(11,11),
(12,12),
(13,13),
(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14),(14,14);

select books.name
from books
inner join borrows_books on books.booksid = borrows_books.booksid
where count(borrows.borrowsid) >= 10;


select *
from readers where readersid in (select readersid from borrows_books where booksid in (select distinct booksid));
